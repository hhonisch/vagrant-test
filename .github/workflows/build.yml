############################################################
# Root workflow for building
############################################################
name: Build

run-name: Build ${{github.run_id}}

on: [push, workflow_dispatch]

jobs:
  # Cache installation media
  cache-install-media:
    runs-on: macos-12
    timeout-minutes: 60
    steps:
      # Check out
      - name: Checkout
        uses: actions/checkout@v4

      # Upgrade Mac OS tools
      - name: Upgrade Mac OS tools
        run: |
          brew install bash
          brew install gnu-sed
          echo "/usr/local/opt/gnu-sed/libexec/gnubin" >> $GITHUB_PATH

      # Set Github environment variables
      - name: Set Github environment variables
        run: make -f ./build/Makefile set_github_vars

      # Check for cached install media
      - name: "Check for cached install media image: ${{env.VM_INSTALL_MEDIA_FILE}}"
        id: check-cache
        uses: actions/cache/restore@v3
        with:
          key: ${{env.VM_INSTALL_MEDIA_SHA1}}
          path: ./install-media
          lookup-only: true

      # Download install media if no cache hit
      - name: "Downloading install media: ${{env.VM_INSTALL_MEDIA_FILE}}"
        if: steps.check-cache.outputs.cache-hit != 'true'
        run: make -f ./build/Makefile get_install_media

      # Store install media in cache if no cache hit
      - name: "Store install media in cache"
        if: steps.check-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          key: ${{env.VM_INSTALL_MEDIA_SHA1}}
          path: ./install-media


  # Build and test Vagrant box
  build-and-test:
    # Run after cache-install-media
    needs: cache-install-media

    # Build using different virtualization providers
    strategy:
      fail-fast: false
      matrix:
        include:
          - virt-provider-name: virtualbox
            virt-provider-id: vbx
          - virt-provider-name: vmware
            virt-provider-id: vmw

    # Reference reusable workflow to do the actual building and testing
    uses: ./.github/workflows/sub-build-and-test.yml

    # Inherit secrets
    secrets: inherit

    # Pass parameters to the sub-workflow
    with:
      # Virtualization provider name
      virt-provider-name: ${{matrix.virt-provider-name}}
      # Virtualization provider ID
      virt-provider-id: ${{matrix.virt-provider-id}}


  # Rerun failed jobs
  rerun-failed-jobs:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: failure()
    steps:
      - name: Rerun failed jobs in the current workflow
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh run rerun ${{ github.run_id }} --failed