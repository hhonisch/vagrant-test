############################################################
# Reusable workflow for testing with given parameters
############################################################
name: Sub-Workflow Test

on:
  workflow_call:
    inputs:
      # Test run ID
      test-run-id:
        required: true
        type: string
      # Virtualization provider name: vmware or virtualbox
      virt-provider-name:
        required: true
        type: string
      # Virtualization provider id: vmw or vbx
      virt-provider-id:
        required: true
        type: string

jobs:

  # Test Vagrant box
  test:
    runs-on: macos-12
    steps:
      # Check out
      - name: Checkout
        uses: actions/checkout@v4

      # Upgrade Mac OS tools
      - name: Upgrade Mac OS tools
        run: |
          brew install bash
          brew install gnu-sed
          echo "/usr/local/opt/gnu-sed/libexec/gnubin" >> $GITHUB_PATH
          brew install gnu-getopt
          echo "/usr/local/opt/gnu-getopt/bin" >> $GITHUB_PATH

      # Workaround for vagrant MD4 issue
      #- name: Downgrade vagrant to v2.3.6
      #  run: |
      #    VER=$(vagrant --version | sed -e "s/Vagrant //")
      #    echo "Installed Vagrant version: $VER"
      #    if [ "$VER" == "2.3.7" ] ; then
      #      echo "Downgrade to Vagrant 2.3.6 due to MD4 openssl issue"
      #      brew upgrade --cask https://raw.githubusercontent.com/Homebrew/homebrew-cask/08e7a8455629e77bf7dbb63ed0a29a731a9bbee3/Casks/vagrant.rb
      #      vagrant plugin update
      #    fi

      # Setup VMware Fusion
      - name: Setup VMware Fusion
        if: inputs.virt-provider-name == 'vmware'
        run: |
          brew install --cask vmware-fusion
          #bash ./build/github_build_helper.sh configure-vmware-fusion --serial-no "${{secrets.VMWARE_FUSION_SERIAL}}"
          bash ./build/github_build_helper.sh configure-vmware-fusion
          brew install --cask vagrant-vmware-utility
          vagrant plugin install vagrant-vmware-desktop

      # Download Dist artifact
      - name: Download Dist artifact
        uses: actions/download-artifact@v4
        with:
          name: Dist_${{inputs.virt-provider-id}}
          path: ./dist/${{inputs.virt-provider-name}}

      # Test Vagrant box
      - name: Test Vagrant box
        run: make -f ./test/Makefile test_run_${{inputs.test-run-id}} VM_PROVIDER=${{inputs.virt-provider-name}}

      # Upload logs
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Logs_Test_${{inputs.virt-provider-name}}_${{inputs.test-run-id}}
          path: |
            ./test/logs

